
@{
    ViewBag.Title = "SIndex";
}

<h2>Stores</h2>
<button class="btn btn-info" data-bind="click : ShowAdd">Add Store</button>
<hr />
<table class="table table-striped table-hover table-bordered">
    <thead>
        <tr>
            <th>Name</th>
            <th>Address</th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody data-bind="foreach: Stores">
        <tr>
            <td data-bind="text: StoreName"></td>
            <td data-bind="text:StoreAddress"></td>
            <td>
                <button class="btn btn-success" data-bind="click:$root.showEditModal">Edit</button>

                <button class="btn btn-danger" data-bind="click:$root.Delete"> Delete </button>

        </tr>

    </tbody>
</table>
<div id="myModal" class="modal fade" role="dialog">
    <div class="modal-dialog" data-bind="with : SelectedStore">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">Add or Edit Store</h4>
            </div>
            <form>
                <div class="modal-body">
                    <div class="form-group">
                        <label>Name</label>
                        <input class="form-control" type="text" data-bind="value : StoreName, valueUpdate : 'afterkeydown'" />
                    </div>
                    <div class="form-group">
                        <label>Address</label>
                        <input class="form-control" type="text" data-bind="value : StoreAddress, valueUpdate : 'afterkeydown'" />
                    </div>
                </div>

                <div class="modal-footer">
                    <button type="button" class="btn btn-success" data-dismiss="modal" data-bind="click : $root.SaveStore, enable : IsValid">Save</button>
                    <button type="button" class="btn btn-success" data-dismiss="modal" data-bind="click : $root.UpdateStore, enable : IsValid">Update</button>
                    <button type="button" class="btn btn-primary" data-dismiss="modal">Close</button>
                </div>
            </form>

        </div>

    </div>
</div>

<script>

    var newstore = {SId:'', StoreName: '', StoreAddress: '' };

    function StoreViewModel(data) {

        var self = this;
        self.SId = data.SId;
        self.StoreName = ko.observable(data.StoreName).extend({
            required: {
                params: true,
                message: "Please enter Store Name."
            }

        });
        self.StoreAddress = ko.observable(data.StoreAddress).extend({
            required: {
                params: true,
                message: "Please enter Address."
            }

        });

        self.ModelErrors = ko.validation.group(self);
        self.IsValid = ko.computed(function () {
            self.ModelErrors.showAllMessages();
            return self.ModelErrors().length == 0;
        });
    }
    function ViewModel() {
        var self = this;
        self.Stores = ko.observableArray();
        self.SelectedStore = ko.observable();
        self.showEditModal = function (data) {
            var selected = ko.mapping.toJS(data);
            self.SelectedStore(new StoreViewModel(selected));
            $('#myModal').modal('show');
        }
        self.ShowAdd = function () {
            self.SelectedStore(new StoreViewModel(newstore));
            $('#myModal').modal('show');
        }
            self.SaveStore = function (data) {
                $.ajax({
                    url: '/Store/AddStore',
                    type: 'POST',
                    contentType: 'application/json; charset=utf-8',
                    data: ko.toJSON(data),
                    success: function (data) {
                        self.Stores.push(data);
                        self.StoreName("");
                        self.StoreAddress("");
                        alert("Saved Successfully");
                        location.reload();

                    }
                });
            }

        // Update Store details
        self.UpdateStore = function () {
            var SelectedStore = self.SelectedStore();
            $.ajax({
                url: '/Store/UpdateStore',
                cache: false,
                type: 'POST',
                contentType: 'application/json; charset=utf-8',
                data: ko.toJSON(SelectedStore),
                success: function (data) {
                    self.Stores.removeAll();
                    self.Stores(data);
                    self.Stores(null);
                    alert("Record Updated Successfully");
                    location.reload();
                }
            });

        }
        // Delete Store details
        self.Delete = function (data) {
            var id = data.SId;
            if (confirm('Are you sure to Delete this Store ?'))  {
                $.ajax({
                    url: '/Store/RemoveStore/' + id,
                    cache: false,
                    type: 'POST',
                    contentType: 'application/json; charset=utf-8',
                    data: ko.toJSON(id),
                    success: function (data) {
                        alert("Record Deleted ");
                        location.reload();
                    }

                });
            }
        }
        loadStores();
        function loadStores() {
            $.ajax({
                url: '/Store/GetAllStores/',
                type: 'GET',
                dataType: 'json',
                success: function (response) {
                    response.forEach(function (item) {
                        self.Stores.push(new StoreViewModel(item));
                    });
                }
            });
        }
    }
    $(document).ready(function () {
        ko.applyBindings(new ViewModel());
    });

</script>
